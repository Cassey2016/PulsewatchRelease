# -*- coding: utf-8 -*-
"""
Created on Sat Jan 14 12:49:55 2023

@author: localadmin
"""
import os
import pandas as pd
root_data_path = r'R:\ENGR_Chon\NIH_Pulsewatch_Database'
all_PPG_ACC_file_name_path = r'R:\ENGR_Chon\NIH_Pulsewatch_Database\py_for_load_Final_Clinical_Trial_Data'

# Get all the UIDs that were generated by MATLAB.
get_UID_list = r'R:\ENGR_Chon\NIH_Pulsewatch_Database\mat_for_load_Final_Clinical_Trial_Data'
dir_list_UID = os.listdir(get_UID_list)

first_3_char = list(set([x[:3] for x in dir_list_UID]))
# first_3_char_unique = [x for x in first_3_char if x[0] == '0' or x[0] == '1']
first_3_char_unique = [x for x in first_3_char if x[0] == '3' or x[0] == '4']
first_3_char_unique.sort()

UID = '036'
if UID[0] == '0' or UID[0] == '1':
    test_PPG_path = os.path.join(root_data_path,'Final_Clinical_Trial_Data',UID+'_final')
elif UID[0] == '3' or UID[0] == '4':
    test_PPG_path = os.path.join(root_data_path,'AF_trial','Final_AF_Trial_Data',UID+'_final')


# Load the PPG file name and ACC file name
import sys
sys.path.append(r'..\func_py')
from utils import my_func_log_txt_read, my_func_load_acc_txt_after_ppg
df = my_func_load_acc_txt_after_ppg(all_PPG_ACC_file_name_path,UID)
# All_PPG_file_name = df['All_PPG_file_name']

for index, row in df.iterrows():
    PPG_file_name = row['All_PPG_file_name']
    ACC_file_name = row['ACC_for_All_PPG_file_name']
    curr_log_name = PPG_file_name[:23]
    curr_log_file_name = curr_log_name+'_log.txt'
    print(curr_log_file_name)
    
    if os.path.isfile(os.path.join(test_PPG_path,curr_log_file_name)):
        log_file_empty = False
        m_output_struct,\
            m_time, \
            m_time_idx = my_func_log_txt_read(test_PPG_path,
                                               curr_log_file_name)
    else:
        # log file does not exists:
        # 045_2020_08_24_12_11_20_log.txt_temp_88
        dir_list = os.listdir(test_PPG_path)
        subs = curr_log_name+'_log'
        log_file_temp = list(filter(lambda x: subs in x, dir_list))
        
        if len(log_file_temp):
            if len(log_file_temp) == 1:
                curr_log_file_name = log_file_temp[0] # I hope it is a str, not the first str of the list.
                log_file_empty = False
                m_output_struct,\
                    m_time, \
                    m_time_idx = my_func_log_txt_read(test_PPG_path,
                                                       curr_log_file_name)
            else:
                print('There are more than one log file for this time!')
        else:
            # there is really no such log file exists!
            log_file_empty = True
            
    if log_file_empty == False:
        with pd.HDFStore(os.path.join(test_PPG_path,UID+'_after_ppg_load_acc.h5')) as store:
            store.put(key='/m_log'+'/'+curr_log_name, value=m_output_struct, format='fixed')
            df_m_time = pd.DataFrame(m_time)
            df_m_time['m_time_idx'] = m_time_idx
            store.put(key='/m_log_m_time'+'/'+curr_log_name, value=df_m_time, format='fixed')
            print(m_output_struct['m_API_ver'])